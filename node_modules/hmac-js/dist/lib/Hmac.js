"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var crypto_1 = require("crypto");
var Hmac = /** @class */ (function () {
    function Hmac() {
    }
    Hmac.prototype.generateHash = function (options) {
        var secret = options.secret, payload = options.payload, timestamp = options.timestamp, algorithm = options.algorithm;
        return this.signHash(secret, payload, timestamp, algorithm);
    };
    Hmac.prototype.verifyHash = function (hash, options, ttl) {
        if (ttl === void 0) { ttl = 30; }
        var secret = options.secret, payload = options.payload, timestamp = options.timestamp, algorithm = options.algorithm;
        var validHash = this.signHash(secret, payload, timestamp, algorithm);
        if (validHash === hash) {
            var isTimestampValid = (new Date(timestamp)).getTime() > 0;
            if (isTimestampValid) {
                if ((new Date().getTime()) - timestamp > ttl) {
                    return false;
                }
                return true;
            }
            return false;
        }
        return false;
    };
    Hmac.prototype.signHash = function (secret, payload, timestamp, algorithm) {
        var hmac = crypto_1.createHmac(algorithm, secret);
        hmac.write(payload + timestamp);
        hmac.end();
        return hmac.read().toString("base64");
    };
    return Hmac;
}());
exports.default = new Hmac();
//# sourceMappingURL=Hmac.js.map