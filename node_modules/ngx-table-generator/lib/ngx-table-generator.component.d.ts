import { OnInit, EventEmitter, AfterViewInit, OnDestroy } from '@angular/core';
import { MatSort, MatPaginator } from '@angular/material';
import { Subscription } from 'rxjs';
import { DatePipe } from '@angular/common';
import { TableUtils } from './utils';
import { ITableColumn } from './interfaces/ITableColumn';
import { ISortOption } from './interfaces/ISortOptions';
import { IPaginatorOptions } from './interfaces/IPaginatorOptions';
import { IFooterData } from './interfaces/IFooterData';
import { IButtonOptions } from './interfaces/IButtonOptions';
export declare class TableGeneratorComponent implements OnInit, AfterViewInit, OnDestroy {
    tableUtils: TableUtils;
    datePipe: DatePipe;
    onPageEvent: EventEmitter<any>;
    buttonEvent: EventEmitter<any>;
    rowClick: EventEmitter<any>;
    sortChange: EventEmitter<any>;
    suboperationAction: EventEmitter<any>;
    trashAction: EventEmitter<any>;
    multiCheckAction: EventEmitter<any>;
    disabledMulticheck: boolean;
    footerData: IFooterData;
    sort: MatSort;
    paginator: MatPaginator;
    private classList;
    dataColumns: ITableColumn[];
    displayedColumns: string[];
    dataSource: any;
    sortOptionData: ISortOption;
    private suboperationsData;
    private isSub;
    buttonOptionsData: IButtonOptions[];
    paginatorOptionData: IPaginatorOptions;
    trashOption: any;
    multiCheck: any;
    showNewButton: boolean;
    showMultiCheckButton: boolean;
    multiCheckArray: any[];
    multiCheckArrayData: any[];
    multiCheckId: string;
    dataSourceConnect: Subscription;
    multiNameToCheck: any;
    multiNameValue: any;
    decimalNum: number;
    sharesNum: number;
    suboperationsGeneratedData: any[];
    showSuboperationsGeneratedData: any[];
    multiMinSelected: any;
    showMulticheck: any[];
    conditionalMulticheck: any;
    keysMulticheck: any;
    valueMulticheckToCompare: any;
    constructor(tableUtils: TableUtils, datePipe: DatePipe);
    classMap: any;
    dataSourceMap: any;
    columns: ITableColumn[];
    sortOptions: ISortOption;
    paginatorOption: IPaginatorOptions;
    buttonOptions: IButtonOptions[];
    generateDisplay(data: ITableColumn[]): any[];
    isSuboperation(columns: any): boolean;
    ngOnInit(): void;
    matSortChange($event: any): void;
    pageEvent(event: any): void;
    onMultiCheckAction(): void;
    suboperationClicked(action: any, row: any): void;
    trashOptionAction(row: any): void;
    checkSort(sort: any): any;
    getObjectToCompare(elem: any, item: any): any;
    ngAfterViewInit(): void;
    onRowClick(row: any, index: any, event: any): void;
    getInstaceName(elem: any, item: any): any;
    parseToDecimal(value: any, item: any): any;
    showSuboperationData(data: any): void;
    checkConditionalOptions(index: any, item: any): void;
    getButtonCondition(item: any): boolean;
    private spliceSuboperation;
    isMulticheckDisabled(): boolean;
    ngOnDestroy(): void;
}
